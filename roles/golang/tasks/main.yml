---
- name: Check current Go version
  ansible.builtin.command:
    cmd: bash -c "/usr/local/go/bin/go version|sed -e 's/go version go//g'|cut -d' ' -f1"
  ignore_errors: true
  register: current_golang_version
  changed_when: false

- name: Continue only when Go is older
  ansible.builtin.fail:
    msg: "Version already exists"
  when: current_golang_version.stdout != "" and current_golang_version.stdout is ansible.builtin.version(golang_version, operator='ge', strict=True)
  register: version_changed
  ignore_errors: true

- name: Remove old installation of Go
  ansible.builtin.file:
    path: /usr/local/go
    state: absent
  become: true
  when: version_changed is succeeded

- name: "Download Go {{ golang_version }}"
  ansible.builtin.unarchive:
    src: "https://storage.googleapis.com/golang/go{{ golang_version }}.linux-amd64.tar.gz"
    dest: "/usr/local"
    remote_src: true
  become: true
  when: version_changed is succeeded

- name: Add golang to system-wide $PATH.
  ansible.builtin.copy:
    dest: /etc/profile.d/golang.sh
    content: 'PATH=$PATH:/usr/local/go/bin'
    mode: "0644"
  become: true
