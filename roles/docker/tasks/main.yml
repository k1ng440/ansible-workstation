---
- name: Get stat of GPG key
  ansible.builtin.stat:
    path: /usr/share/keyrings/docker.gpg
  register: gpg_file

- name: Creating temp directory
  ansible.builtin.tempfile:
    state: directory
    prefix: "docker"
  when: not gpg_file.stat.exists
  register: temp_dir

- name: Repository key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: "{{ temp_dir.path }}/docker.gpg"
    checksum: 'sha256:1500c1f56fa9e26b9b8f42452a553675796ade0807cdce11975eb98170b3a570'
    mode: "0644"
  when: not gpg_file.stat.exists
  become: true

- name: De-Armor GPG key
  ansible.builtin.command:
    cmd: "gpg -o /usr/share/keyrings/docker.gpg --dearmor {{ temp_dir.path }}/docker.gpg"
    creates: /usr/share/keyrings/docker.gpg
  when: not gpg_file.stat.exists
  become: true

- name: Add apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      {{ dist_override | default(ansible_distribution_release) }} stable"
    state: present
    filename: vscode
    update_cache: true
    mode: "0644"
    validate_certs: true
  become: true

- name: Install docker
  become: true
  ansible.builtin.apt:
    state: present
    update_cache: true
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io

- name: Enable service
  ansible.builtin.systemd:
    enabled: true
    name: docker
    state: started
  become: true

- name: Add to group
  ansible.builtin.user:
    append: true
    groups: docker
    name: "{{ ansible_env['USER'] }}"
  become: true

- name: Copy daemon.json
  ansible.builtin.template:
    dest: "/etc/docker/daemon.json"
    src: "daemon.json"
    mode: "0644"
  become: true
  notify: RESTART_DOCKER
